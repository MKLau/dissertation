\documentclass[11pt]{amsart}
\usepackage{geometry}                % See geometry.pdf to learn the layout options. There are lots.
\geometry{letterpaper}                   % ... or a4paper or a5paper or ... 
%\geometry{landscape}                % Activate for for rotated page geometry
%\usepackage[parfill]{parskip}    % Activate to begin paragraphs with an empty line rather than an indent
\usepackage{graphicx}
\usepackage{amssymb}
\usepackage{epstopdf}
\usepackage{multicol}
\DeclareGraphicsRule{.tif}{png}{.png}{`convert #1 `dirname #1`/`basename #1 .tif`.png}
\usepackage{/Library/Frameworks/R.framework/Resources/share/texmf/Sweave}

\title{Genotypic variation influences lichen co-occurrence network structure}
\author{M.K. Lau, L.J. Lamit, T.G. Whitham}
%\date{}                                           % Activate to display a given date or no date

\begin{document}
\maketitle

\section{Things to Do}
\begin{enumerate}
\item Do a whole network analysis using PerMANOVA
\item Include roughness as a factor
\item Can you use each qaudrat as a replicate?
\item Use eigenvector centrality. What is the dominant eigenvalue for each matrix?
\item Use Fath and Patten's 1998 network mutualism in utility analysis
\item Fix the gplot inputs for genotype vertex attributes (it is
  currently using the tree level data, see geno.A and geno.A.)
\item Can we talk about interactions?
\item Reconcile co-occurrence literature with ENA literature,
  especially speak to the possiblity of correlation networks being
  integrated over all path lengths)
\end{enumerate}

\section{Generate lichen network models for all genotypes in each garden}

\subsection{Load packages}


\end{document}  




%% ##Ye olde analyses
%% ##Summer 2011?
%% <<>>=
%% require(RLRsim)
%% require(lme4)
%% require(sna)
%% #require(network)
%% #require(igraph)                                      
%% require(vegan)
%% require(xtable)
%% require(gplots)
%% source('source/CorNets.R')
%% source('source/pairs.R')
%% se = function(x){sd(x)/sqrt(length(x))}

%% binary = function(x,bin=0){x[x>bin]=1;return(x)}

%% richness = function(x){
%%   x = apply(x,2,sum)
%%   x[x != 0] = 1
%%   sum(x)
%% }

%% bplot = function(x,y,ylab=''){
%%  mu. = tapply(y,x,mean)
%%  se. = tapply(y,x,se)
%%  barplot2(mu.,plot.ci=TRUE,ci.u=mu.+se.,ci.l=mu.-se.,las=2,ylab=ylab)
%% }

%% which.garden = function(x){
%%  x = unlist(strsplit(as.character(x),split='.',fixed=TRUE))[1]
%%  x = unlist(strsplit(x,split=''))
%%  if (length(x) < 3){x = 'ONC'}else {x = 'PIT'}
%%  return(x)
%% }

%% lco2quad = function(x){
%%  com = x[,-1:-6]
%%  com = apply(com,1,sum)
%%  x = x[,5:6]
%%  out = array(0,dim=c(max(x),max(x)))
%%  for (i in (1:nrow(x))){
%%   out[x[i,1],x[i,2]] = com[i]
%%  }
%%  return(out)
%% }

%% exp.m <- function(mat, n){
%%   ## Alberto Monteiro
%%   ## https://stat.ethz.ch/pipermail/r-help/2007-May/131330.html
%%   ## test if mat is a square matrix
%%   ## treat n < 0 and n = 0 -- this is left as an exercise
%%   ## trap non-integer n and return an error
%%   if (n == 1) return(mat)
%%   result <- diag(1, ncol(mat))
%%   while (n > 0) {
%%     if (n %% 2 != 0) {
%%       result <- result %*% mat
%%       n <- n - 1
%%     }
%%     mat <- mat %*% mat
%%     n <- n / 2
%%   }
%%   return(result)
%% }

%% proliferate = function(g = 'graph',lim = 10000){
%%   n = numeric()
%%   for (i in 1:lim){
%%     n[i] = sum(exp.m(g,i))
%%     if (n[i] == Inf){break}
%%   }
%% n = n[-i]
%% return(n)
%% }

%% @

%% \subsection{Data Summary}
%% NOTE: there was a data entry error for tree N4.30, changed 11 to 1 in LCO\_data\_ONC\_PIT.csv.

%% <<>>=
%%   lco = read.csv('data/LCO_data_ONC_PIT.csv')
%% @ 


%% <<results=tex>>=
%%   xtable(summary(lco[,1:6]),table.placement='tbp')
%% @

%% <<results=tex>>=
%%   xtable(summary(lco[,7:10]),table.placement='tbp')
%% @                                       

%% <<results=tex>>=
%%   xtable(summary(lco[,13:ncol(lco)]),table.placement='tbp')
%% @                                       

%% \subsection{Separate Community Matrixes by Tree}
%% <<>>=
%%   lco = lco[lco$Quadrat == 'n45.55',]  #remove upper quadrats
%%   lco.l = list()
%%   tree.names = as.character(unique(lco$Tree))
%% @ 

%% <<>>=
%%   for (i in (1:length(tree.names))){
%%     lco.l[[i]] = lco[lco$Tree == tree.names[i],]
%%   }
%%   names(lco.l) = tree.names
%%   any(table(tree.names) != 1)  #check for any duplicate trees
%% @ 

%% \subsection{Separate garden, genotype and community data}
%% <<>>=

%%   garden = sapply(tree.names,which.garden)
%%   geno = unlist(lapply(lco.l,function(x) as.character(x$Geno[1])))
%%   com.l = lapply(lco.l,function(x) x[,(1:ncol(x))[colnames(x) == 'Xgal']:ncol(x)])

%% @ 

%% <<results=tex,fig=true>>=
%% geno.table = tapply(factor(geno),garden,table)
%% geno.table = rbind(geno.table$'ONC',geno.table$'PIT')
%% rownames(geno.table) = c('ONC','PIT')
%% geno.table = geno.table[,order(apply(geno.table,2,sum),decreasing=TRUE)]
%% xtable(geno.table)
%% barplot(geno.table,beside=FALSE,las=2,ylab='Number of Trees',col=c(1,0))
%% legend('topright',c('ONC','PIT'),fill=c(1,0),bty='n')
%% @ 

%% \subsection{Convert to Quadrat View}

%% <<>>=

%%  quad.l = lapply(lco.l,lco2quad)

%% @ 

%% \paragraph{}Using the \texttt{kendall.pairs} function at an $\alpha$
%% level of 0.05 and adjusting for multiple tests, we can model each
%% community network using the pairwise correlations of all species pairs.

%% <<>>=
%% zero.na = function(x){x[is.na(x)] = 0;return(x)}
%% cor.l = lapply(com.l,kendall.pairs, alpha = 0.05,p.adj=TRUE)
%% cor.l = lapply(cor.l,zero.na)
%% @ 

%% \section{Network Statistics}

%% <<>>=
%%   A = lapply(com.l,function(x) apply(x,2,sum))
%%   A.= lapply(A,binary)
%%   R = unlist(lapply(com.l,richness))
%%   n = unlist(lapply(cor.l,function(x) length(apply(x,1,sum)[abs(apply(x,1,sum)) > 0]))) #number of nodes
%%   L = unlist(lapply(cor.l,function(x) length(x[x != 0])/2)) #number of edges
%%   C = L/(n*(n-1)); C[is.na(C)] = 0 #connectance
%%   abs.cor.l = lapply(cor.l,abs)
%%   C.f = unlist(lapply(abs.cor.l,function(x) centralization(x,degree,mode='graph')))  #Freeman's centralization


%% @ 

%% %% \subsection{ANOVA}

%% %% <<>>=
%% %%   aov.n = aov(sqrt(n)~factor(geno)*factor(garden))
%% %%   aov.L = aov(sqrt(L)~factor(geno)*factor(garden))
%% %%   aov.C = aov(C~factor(geno)*factor(garden))
%% %%   aov.Cf = aov(C.f~factor(geno)*factor(garden))

%% %%   aov.list = list(aov.n,aov.L,aov.C,aov.Cf)
%% %% @ 

%% %% <<results=tex>>=
%% %%   for (i in (1:length(aov.list))){
%% %%   print(xtable(summary(aov.list[[i]])))
%% %%   }
%% %% @ 


%% %% <<>>=
%% %% shapiro.test(residuals(aov.n))
%% %% shapiro.test(residuals(aov.L))
%% %% shapiro.test(residuals(aov.C))

%% %% shapiro.test(n)
%% %% shapiro.test(L)
%% %% shapiro.test(C)

%% %% hist(residuals(aov.n))
%% %% hist(residuals(aov.L))
%% %% hist(residuals(aov.C))

%% %% qqnorm(residuals(aov.C))

%% %% hist(residuals(aov.n))
%% %% hist(residuals(aov.L))
%% %% hist(residuals(aov.C))

%% %% fligner.test(n~factor(geno))
%% %% fligner.test(L~factor(geno))
%% %% fligner.test(C~factor(geno))
%% %% @ 

%% <<results=tex>>=
%% input.pairs = cbind(R,n,L,C,C.f)
%% pairs.onc = input.pairs[garden == 'ONC',]
%% pairs.pit = input.pairs[garden == 'PIT',]

%% @ 

%% <<fig=true>>=
%% pairs(input.pairs,upper.panel=panel.lm,lower.panel=panel.cor)

%% @ 

%% <<fig=true>>=
%% pairs(pairs.onc,upper.panel=panel.lm,lower.panel=panel.cor)

%% @ 

%% <<fig=true>>=
%% pairs(pairs.pit,upper.panel=panel.lm,lower.panel=panel.cor)

%% @ 

%% \subsection{REML}
%% \paragraph{}Separate the analysis of ONC and PIT due to unequal
%% representation of genotypes at both gardens. 

%% <<results=tex>>=
%% ##ONC Analyses
%%  geno.onc = geno[garden == 'ONC']
%%  n.onc = n[garden == 'ONC']
%%  log.n.onc = log(n.onc+0.5)
%%  L.onc = L[garden == 'ONC']
%%  log.L.onc = log(L.onc+0.5)
%%  C.onc = C[garden == 'ONC']
%%  Cf.onc = C.f[garden == 'ONC']
%%  asin.sqrt.CF.onc = asin(sqrt(Cf.onc))
%%                                         #Size
%%  exactRLRT(lmer(n.onc~1|geno.onc)) 
%%  exactRLRT(lmer(log.n.onc~1|geno.onc)) 
%%                                         #Number of Edges
%%  exactRLRT(lmer(L.onc~1|geno.onc)) 
%%  exactRLRT(lmer(log.L.onc~1|geno.onc)) 
%%                                         #Connectance
%%  exactRLRT(lmer(C.onc~1|geno.onc)) 
%%                                         #Freeman's Degree Centrality
%%  exactRLRT(lmer(Cf.onc~1|geno.onc))
%%  exactRLRT(lmer(asin.sqrt.CF.onc~1|geno.onc))                                      

%%  geno.pit = geno[garden == 'PIT'] 
%%  n.pit = n[garden == 'PIT']
%%  log.n.pit = log(n.pit+0.5)
%%  L.pit = L[garden == 'PIT']
%%  log.L.pit = log(L.pit+0.5)
%%  C.pit = C[garden == 'PIT']
%%  Cf.pit = C.f[garden == 'PIT']
%%  asin.sqrt.CF.pit = asin(sqrt(Cf.pit))
%%                                         #Size
%%  exactRLRT(lmer(n.pit~1|geno.pit))
%%  exactRLRT(lmer(log.n.pit~1|geno.pit))
%%                                         #Number of Edges
%%  exactRLRT(lmer(L.pit~1|geno.pit))
%%  exactRLRT(lmer(log.L.pit~1|geno.pit))
%%                                         #Connectance
%%  exactRLRT(lmer(C.pit~1|geno.pit))
%%                                         #Freeman's Degree of Centralization
%%  exactRLRT(lmer(Cf.pit~1|geno.pit))
%%  exactRLRT(lmer(asin.sqrt.CF.pit~1|geno.pit))
%% @ 



%% %% \subsection{Pathway Proliferation}
%% %% <<>>=
%% %%   G.graph = abs(cor.l[[1]])
%% %%   for (i in 2:length(cor.l)){
%% %%     G.graph = G.graph + abs(cor.l[[i]])
%% %%   }
%% %%   G.graph = G.graph / length(cor.l)
%% %%   A = G.graph
%% %%   A[A!=0] = 1
  
%% %% @ 


%% \section{Plots}


%% \subsection{Network Graphs}

%% \paragraph{}Graph of the mean connections across all trees.

%% <<fig=true>>=
%%   gplot(G.graph,gmode='graph',displaylabels=TRUE,mode='circle',edge.lwd=G.graph*200)
%% @ 

%% \newpage
%% \paragraph{}\textbf{Mean graphs for each genotype.}

%% <<>>=
%% cor.l. = cor.l[garden == 'ONC']
%% geno.A = A[garden == 'ONC']
%% geno.A.= A.[garden == 'ONC']
%% geno.net = list()
%% for (i in (1:length(unique(geno.onc)))){
%%   x = cor.l.[geno.onc == unique(geno.onc)[i]]
%%   geno.net[[i]] = x[[1]]
%%   for (j in (2:length(x))){
%%     geno.net[[i]] = geno.net[[i]] + x[[j]]
%%   }
%%   geno.net[[i]] = geno.net[[i]] / length(x)
%% }
%% names(geno.net) = unique(geno)
%% @ 

%% <<fig=true,width=15,height=20,echo=false>>=
%% par(mfrow=c(4,4))
%% for (i in (1:length(geno.net))){
%% gplot(abs(geno.net[[i]]),gmode='graph',displaylabels=FALSE,mode='circle',main=names(geno.net)[i],cex.main=2,edge.lwd=abs(geno.net[[i]])*100,vertex.col=geno.A.[[i]],edge.col='grey',vertex.sides=100,vertex.cex=(geno.A[[i]]/max(geno.A[[i]])+1)^2,vertex.lty=geno.A.[[i]])
%% }
%% @ 

%% \newpage
%% \paragraph{}\textbf{ONC Network Statistics}
%% <<fig=true>>=
%%  par(mfrow=c(2,2))
%%  bplot(geno.onc,n.onc,'Size')
%%  bplot(geno.onc,L.onc,'Number of Edges')
%%  bplot(geno.onc,C.onc,'Connectance')
%%  bplot(geno.onc,Cf.onc,'Centralization')
%% @ 

%% \newpage
%% \paragraph{}\textbf{PIT Network Statistics}

%% <<fig=true>>=
%%  par(mfrow=c(2,2))
%%  bplot(geno.pit,n.pit,'Size')
%%  bplot(geno.pit,L.pit,'Number of Edges')
%%  bplot(geno.pit,C.pit,'Connectance')
%%  bplot(geno.pit,Cf.pit,'Centralization')
%% @ 

