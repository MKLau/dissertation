\documentclass[12pt]{article}
\usepackage{color}
\usepackage{cite}
\usepackage{geometry}                % See geometry.pdf to learn the layout options. There are lots.
%\usepackage{pdflscape}        %single page landscape
                                %mode \begin{landscape} \end{landscape}
\geometry{letterpaper}                   % ... or a4paper or a5paper or ... 
%\usepackage[parfill]{parskip}    % Activate to begin paragraphs with an empty line rather than an indent
\usepackage{graphicx}
\usepackage{amssymb}
\usepackage{Sweave}
\newcommand{\etal}{\textit{et al.}}
\usepackage{hyperref}  %\hyperref[label_name]{''link text''}
                       %\hyperlink{label}{anchor caption}
                       %\hypertarget{label}{link caption}
\linespread{1.5}

\title{Sunset Crater Rock Lichen Community Composition}
\author{M.K. Lau}
%\date{}                                           % Activate to display a given date or no date

\begin{document}
\maketitle



\section{Questions for Co-Authors}
\begin{enumerate}
\item Were all measurments a part of the same quadrat? 
\item I.E., are lichen/bryophyte measurements ablsolute or a proportion of available
  habitat?
\item Rikke and Cameron, how were the lichen/bryophyte measurements
  done?
\item Richard, how were the plant and light measurements done?
\end{enumerate}

\section{Things to Do}

\begin{itemize}
\item Check Resistance vs Susceptible in barplots
\item Chekc on bird preference
\item Compile trait data from database
\item Check on co-occurrence
\item Do indicator species sems or summed species sems
\item multiple resgresion for variables on community
\end{itemize}


\section{Do rock lichen communities respond to phenotypic variation in
a foundation species?}

\subsection{Load and Pre-Process Data}

<<>>=
key <- read.csv('/Users/Aeolus/projects/Sunset_Crater_Lichens/data/key.csv')
x <- read.csv('/Users/Aeolus/projects/Sunset_Crater_Lichens/data/spp_env_combined.csv')
                                        #remove dead
x <- x[x$Live.Dead == 1,]
com <- x[,((1:ncol(x))[colnames(x) == 'Acacon']):((1:ncol(x))[colnames(x) == 'Xanele'])]
env <- x[,1:12]
                                        #remove N and S light
env <- env[,-10:-11]
                                        #flip R and 
## env$Moth[env$Moth==0] <- 2
## env$Moth[env$Moth==1] <- 0
## env$Moth[env$Moth==2] <- 1
                                        #fix colnames
colnames(env) <- sub('\\.\\.','',colnames(env))
colnames(env)

@ 

\subsection{Analysis of Moth Affects on "Env" Variables}

%% <<>>=

%% library(vegan)
%% library(mvabund)
%% library(tweedie)
%% library(statmod)
%% library(xtable)
%%                                         #the response of light
%% env. <- env[,c(4:10)]
%% env. <- apply(env.,2,sqrt)
%% mva.env <- mvabund(env.)
%% fit.env <- manyglm(mva.env~env$Moth:env$Tree.pairs,family='gaussian')
%% summary(fit.env,p.uni='unadjusted')
%% p.adjust(summary(fit.env,p.uni='unadjusted')$uni.p[,2],method='fdr')

%% @ 

<<fig=true>>=
shapiro.test(fit.env$residuals)
par(mfrow=c(1,2))
plot(fit.env$residuals~fit.env$fitted)
abline(h=0)
hist(fit.env$residuals)

@ 

<<fig=true,results=hide>>=
library(gplots)
par(mfrow=c(2,4))
for (i in 4:ncol(env)){
  mu <- tapply(env[,i],env$Moth,mean)
  se <- tapply(env[,i],env$Moth,function(x)sd(x)/sqrt(length(x)))
  x.names <- unique(env$Moth)
  x.names[x.names==1] <- 'R'
  x.names[x.names==0] <- 'S'
  barplot2(mu,plot.ci=TRUE,ci.l=mu-se,ci.u=mu+se,ylab=colnames(env)[i],names=x.names)
}

my.col='white'
par(col.axis=my.col,col.lab=my.col,mai=rep(0.1,4),mar=c(4,4.5,1,1),cex.lab=2)
i=4
mu <- tapply(env[,i],env$Moth,mean)
se <- tapply(env[,i],env$Moth,function(x)sd(x)/sqrt(length(x)))
barplot2(mu,plot.ci=TRUE,ci.l=mu-se,ci.u=mu+se,ylab='Litter Cover',names=c('S','R'),yaxt='n',ci.col='white',border='white')
axis(2,col=my.col,col.ticks=my.col)

i=5
mu <- tapply(env[,i],env$Moth,mean)
se <- tapply(env[,i],env$Moth,function(x)sd(x)/sqrt(length(x)))
barplot2(mu,plot.ci=TRUE,ci.l=mu-se,ci.u=mu+se,ylab='Rock Cover',names=c('S','R'),yaxt='n',ci.col='white',border='white')
axis(2,col=my.col,col.ticks=my.col)

i=ncol(env)
mu <- tapply(env[,i],env$Moth,mean)
se <- tapply(env[,i],env$Moth,function(x)sd(x)/sqrt(length(x)))
barplot2(mu,plot.ci=TRUE,ci.l=mu-se,ci.u=mu+se,ylab='Light Intensity',names=c('S','R'),yaxt='n',ci.col='white',border='white')
axis(2,col=my.col,col.ticks=my.col)

@ 

<<>>=
summary(lm(env$Light.average~env$Moth))
summary(lm(env$Litter~env$Moth))
@ 

<<echo=false,results=hide>>=
panel.cor <- function(x, y, digits=2, prefix="", cex.cor, ...)
  {
    usr <- par("usr"); on.exit(par(usr))
    par(usr = c(0, 1, 0, 1))
    r. <- (cor(x, y))
    r <- abs(cor(x, y))
    txt <- format(c(r., 0.123456789), digits=digits)[1]
    txt <- paste(prefix, txt, sep="")
    if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
    text(0.5, 0.5, txt, cex = cex.cor * r)
  }

@ 

<<fig=true>>=
  pairs(env[,c(-2:-3,-8:-11)],lower.panel=panel.cor)

@ 

\section{Community Response to Moth}

\subsection{Sampling}

<<>>=
library(vegan)
spac <- specaccum(com)
plot(spac,xlab='Number of Trees',ylab='Number of Lichen Species')

@ 

\subsection{Abundance, Richness and Diversity}

<<>>=
                                        #abundance
A <- apply(com,1,sum)
A.fit <- glm(log(A+1)~Moth:Tree.pairs,data=env)
                                        #richness
R <- apply(com,1,function(x) length(x[x!=0]))
R.fit <- glm(R~Moth:Tree.pairs,data=env,family='poisson')
                                        #Shannon's diversity
H <- apply(com,1,diversity)
H.fit <- glm(H~Moth:Tree.pairs,data=env)

@ 

<<results=tex>>=
library(xtable)
xtable(summary(A.fit))
xtable(summary(R.fit))
xtable(summary(H.fit))

@ 

\subsection{Composition}
<<>>=
                                        #paired test of composition
ds <- rep(min(com[com!=0]),nrow(com))
com. <- cbind(com,ds)
adonis(com.~env$Moth:env$Tree.pairs)
##                                         #mvabund
## attach(env)
## mva.com <- com[,apply(com,2,sum)!=0]
##                                         #many glm with gaussian distribution
## mva.com <- apply(mva.com,2,sqrt)
## mva.com <- mvabund(mva.com)
## glm.fit <- manyglm(mva.com~Moth:Tree.pairs,family='gaussian')
## detach(env)
## anova(glm.fit)

@ 

%% <<results=tex>>=
%% p.uni <- summary(glm.fit,p.uni='unadjusted')$uni.p
%% xtable(apply(p.uni,2,p.adjust,method='fdr'))

%% @ 

%% <<>>=
%% attach(env)
%% com.mglm <- manyglm(mva.com~Light.average*Litter*Big.rocks,family='gaussian')
%% detach(env)
%% summary(com.mglm)

%% @ 

<<>>=
                                        #paired distance based
d. <- as.matrix(vegdist(com.))
pd <- 0
for (i in 1:(nrow(d.)-1)){
  pd[i] <- d.[(i+1),i]
}
pd. <- pd[(1:length(pd)) %% 2 == 1]
wilcox.test(pd.,exact=FALSE)
env.. <- env[(1:nrow(env)) %% 2 == 1,]
library(tweedie)
glm. <- glm(pd.~Light.average*Litter*Big.rocks,data=env..,family=tweedie(2))

@ 

<<results=tex>>=
xtable(summary(glm.))

@ 

\subsection{Indicator Species Analysis}

<<>>=
                                        #indicator species
## library(labdsv)
## ind.spp <- indval(com,env$Moth)
## summary(ind.spp)
## detach(package:labdsv)

@ 

\paragraph{} Indicator Species Analysis Results using Moth as the grouping factor
\paragraph{} species cluster indicator.value probability
\paragraph{} Canros       2          0.6397       0.006
\paragraph{} Acasup       2          0.6295       0.002
\paragraph{} Acacon       2          0.4769       0.001
\paragraph{} Acaobp       2          0.4241       0.008
\paragraph{} Phydub       2          0.4125       0.018
\paragraph{} Calare       2          0.2966       0.036


<<fig=true>>=
                                        #NMDS
library(vegan)
library(ecodist)
d <- vegdist(com.)
if (any(ls()=='my.nmds')){}else{my.nmds <- nmds(d,3,3,100)}
env.nms <- env.[,-c(3,4,5,6)]
par(mfrow=c(3,3))
for (i in 1:3){
  for (j in 1:3){
    if (i!=j){
      par(mar=c(5.1, 4.1, 4.1, 2.1)-0.75)
      vectors <- envfit(nmds.min(my.nmds)[,c(i,j)]~env.nms)
      plot(nmds.min(my.nmds)[,c(j,i)],pch=19,col=grey(c(0.75,0))[(env$Moth+1)],xlab='',ylab='')
      plot(vectors,col='black')
    }else{
      par(mar=c(5.1, 4.1, 4.1, 2.1)-2)
      plot(1,1,axes=FALSE,xlab='',ylab='',type='n')
      text(1,1,labels=paste('X',i,sep=''),cex=10)
    }
  }
}


i=2
j=3
my.col <- 'white'
par(col.axis=my.col,col.lab=my.col,mai=rep(0.1,4),mar=c(4,4,1,1))
plot(nmds.min(my.nmds)[,c(j,i)],pch=c(16,18)[(env$Moth+1)],col=c('darkgrey','white')[(env$Moth+1)],xlab='',ylab='',bty='n',xaxt='n',yaxt='n',cex=2)
colnames(env.nms) <- c('Litter','Rocks','Light')
v <- env.nms[,-2]
vectors <- envfit(nmds.min(my.nmds)[,c(i,j)]~v)
axis(1,col=my.col,col.ticks=my.col)
axis(2,col=my.col,col.ticks=my.col)
title(xlab='X1',ylab='X2',col=my.col)
ordiellipse(nmds.min(my.nmds)[env$Moth==0,c(j,i)],group=(env$Moth)[env$Moth==0],col='darkgrey',lwd=3)
ordiellipse(nmds.min(my.nmds)[env$Moth==1,c(j,i)],group=(env$Moth)[env$Moth==1],col='white',lwd=3)
legend('topright',legend=c('S','R'),pch=c(18,16),col=c('white','darkgrey'),box.col='white',cex=2,text.col='white')
plot(vectors,col='lightblue',cex=1,lwd=2)

@ 

%% <<>>=

%% attach(env)
%% com.mglm <- manyglm(mva.com~factor(Moth)*Light.average*Litter*Big.rocks,family='gaussian')
%% detach(env)
%% summary(com.mglm)

%% @ 

\pagebreak

\subsection{SEM}

%%SEM

<<echo=false>>=
  library(sem)
###Abundance
Abundance <- A
model.sem <- specifyModel(file='~/scrl/scrl_semA.txt')
   sem.data <- cbind(env,Abundance)
                                        #transforms
   sem.data$Light.average <- sqrt(sem.data$Light.average)
   sem.data$Litter <- sqrt(sem.data$Litter)
   sem.data$Big.rocks <- sqrt(sem.data$Big.rocks)
                                        #sem fitting and analysis
                                        #colnames(sem.data)
   Sigma <- var(sem.data[,c(-1,-3,-6:-9)])
   sem.fit <- sem(model.sem,S=Sigma,N=nrow(sem.data))
   summary(sem.fit)
   modIndices(sem.fit)
                                        #effects(sem.fit)
                                        #hist(residuals(sem.fit))
                                        #stdCoef(sem.fit)
   pathDiagram(sem.fit,file='semPathA',edge.labels='values',standardize=TRUE
               ,ignore.double=FALSE,size=c(12,12),edge.font=c("Arial", 10),
               graphics.fmt='png') #export to graphviz

@ 

\includegraphics{semPathA.png}
\pagebreak

<<echo=false>>=
###Richness
Richness <- R
model.sem <- specifyModel(file='~/scrl/scrl_semR.txt')
   sem.data <- cbind(env,Richness)
                                        #transforms
   sem.data$Light.average <- sqrt(sem.data$Light.average)
   sem.data$Litter <- sqrt(sem.data$Litter)
   sem.data$Big.rocks <- sqrt(sem.data$Big.rocks)
                                        #sem fitting and analysis
                                        #colnames(sem.data)
   Sigma <- var(sem.data[,c(-1,-3,-6:-9)])
   sem.fit <- sem(model.sem,S=Sigma,N=nrow(sem.data))
   summary(sem.fit)
   modIndices(sem.fit)
                                        #effects(sem.fit)
                                        #hist(residuals(sem.fit))
                                        #stdCoef(sem.fit)
   pathDiagram(sem.fit,file='semPathR',edge.labels='values',standardize=TRUE
               ,ignore.double=FALSE,size=c(12,12),edge.font=c("Arial", 10),
               graphics.fmt='png') #export to graphviz

@ 

\includegraphics{semPathR.png}

\pagebreak

<<echo=false>>=
###Diversity
Diversity <- H
model.sem <- specifyModel(file='~/scrl/scrl_semD.txt')
   sem.data <- cbind(env,Diversity)
                                        #transforms
   sem.data$Light.average <- sqrt(sem.data$Light.average)
   sem.data$Litter <- sqrt(sem.data$Litter)
   sem.data$Big.rocks <- sqrt(sem.data$Big.rocks)
                                        #sem fitting and analysis
                                        #colnames(sem.data)
   Sigma <- var(sem.data[,c(-1,-3,-6:-9)])
   sem.fit <- sem(model.sem,S=Sigma,N=nrow(sem.data))
   summary(sem.fit)
   modIndices(sem.fit)
                                        #effects(sem.fit)
                                        #hist(residuals(sem.fit))
                                        #stdCoef(sem.fit)
   pathDiagram(sem.fit,file='semPathD',edge.labels='values',standardize=TRUE
               ,ignore.double=FALSE,size=c(12,12),edge.font=c("Arial", 10),
               graphics.fmt='png') #export to graphviz

@ 

\includegraphics{semPathD.png}

\pagebreak

<<echo=false>>=
###Composition
model.sem <- specifyModel(file='~/scrl/scrl_sem1.txt')
   sem.data <- cbind(env,nmds.min(my.nmds))
                                        #transforms
   sem.data$Light.average <- sqrt(sem.data$Light.average)
   sem.data$Litter <- sqrt(sem.data$Litter)
   sem.data$Big.rocks <- sqrt(sem.data$Big.rocks)
                                        #sem fitting and analysis
                                        #colnames(sem.data)
   Sigma <- var(sem.data[,c(-1,-3,-6:-9)])
   sem.fit <- sem(model.sem,S=Sigma,N=nrow(sem.data))
   summary(sem.fit)
   modIndices(sem.fit)
                                        #effects(sem.fit)
                                        #hist(residuals(sem.fit))
                                        #stdCoef(sem.fit)
   pathDiagram(sem.fit,file='semPath1',edge.labels='values',standardize=TRUE
               ,ignore.double=FALSE,size=c(12,12),edge.font=c("Arial", 10),
               graphics.fmt='png') #export to graphviz
@ 

\includegraphics{semPath1.png}

<<echo=false>>=
###Species - Acacon
Acacon <- com$Acacon
model.sem <- specifyModel(file='~/scrl/scrl_semAcacon.txt')
   sem.data <- cbind(env,Acacon)
                                        #transforms
   sem.data$Light.average <- sqrt(sem.data$Light.average)
   sem.data$Litter <- sqrt(sem.data$Litter)
   sem.data$Big.rocks <- sqrt(sem.data$Big.rocks)
                                        #sem fitting and analysis
                                        #colnames(sem.data)
   Sigma <- var(sem.data[,c(-1,-3,-6:-9)])
   sem.fit <- sem(model.sem,S=Sigma,N=nrow(sem.data))
   summary(sem.fit)
   modIndices(sem.fit)
                                        #effects(sem.fit)
                                        #hist(residuals(sem.fit))
                                        #stdCoef(sem.fit)
   pathDiagram(sem.fit,file='semPathAcacon',edge.labels='values',standardize=TRUE
               ,ignore.double=FALSE,size=c(12,12),edge.font=c("Arial", 10),
               graphics.fmt='png') #export to graphviz

@ 

\includegraphics{semPathAcacon.png}

\pagebreak

<<echo=false>>=
###Acasup
Acasup <- com$Acasup
model.sem <- specifyModel(file='~/scrl/scrl_semAcasup.txt')
   sem.data <- cbind(env,Acasup)
                                        #transforms
   sem.data$Light.average <- sqrt(sem.data$Light.average)
   sem.data$Litter <- sqrt(sem.data$Litter)
   sem.data$Big.rocks <- sqrt(sem.data$Big.rocks)
                                        #sem fitting and analysis
                                        #colnames(sem.data)
   Sigma <- var(sem.data[,c(-1,-3,-6:-9)])
   sem.fit <- sem(model.sem,S=Sigma,N=nrow(sem.data))
   summary(sem.fit)
   modIndices(sem.fit)
                                        #effects(sem.fit)
                                        #hist(residuals(sem.fit))
                                        #stdCoef(sem.fit)
   pathDiagram(sem.fit,file='semPathAcasup',edge.labels='values',standardize=TRUE
               ,ignore.double=FALSE,size=c(12,12),edge.font=c("Arial", 10),
               graphics.fmt='png') #export to graphviz

@ 

\includegraphics{semPathAcasup.png}

\pagebreak

<<echo=false>>=
###Acaobp
Acaobp <- com$Acaobp
model.sem <- specifyModel(file='~/scrl/scrl_semAcaobp.txt')
   sem.data <- cbind(env,Acaobp)
                                        #transforms
   sem.data$Light.average <- sqrt(sem.data$Light.average)
   sem.data$Litter <- sqrt(sem.data$Litter)
   sem.data$Big.rocks <- sqrt(sem.data$Big.rocks)
                                        #sem fitting and analysis
                                        #colnames(sem.data)
   Sigma <- var(sem.data[,c(-1,-3,-6:-9)])
   sem.fit <- sem(model.sem,S=Sigma,N=nrow(sem.data))
   summary(sem.fit)
   modIndices(sem.fit)
                                        #effects(sem.fit)
                                        #hist(residuals(sem.fit))
                                        #stdCoef(sem.fit)
   pathDiagram(sem.fit,file='semPathAcaobp',edge.labels='values',standardize=TRUE
               ,ignore.double=FALSE,size=c(12,12),edge.font=c("Arial", 10),
               graphics.fmt='png') #export to graphviz

@ 

\includegraphics{semPathAcaobp.png}
\pagebreak

<<echo=false>>=
###Canros
Canros <- com$Canros
model.sem <- specifyModel(file='~/scrl/scrl_semCanros.txt')
   sem.data <- cbind(env,Canros)
                                        #transforms
   sem.data$Light.average <- sqrt(sem.data$Light.average)
   sem.data$Litter <- sqrt(sem.data$Litter)
   sem.data$Big.rocks <- sqrt(sem.data$Big.rocks)
                                        #sem fitting and analysis
                                        #colnames(sem.data)
   Sigma <- var(sem.data[,c(-1,-3,-6:-9)])
   sem.fit <- sem(model.sem,S=Sigma,N=nrow(sem.data))
   summary(sem.fit)
   modIndices(sem.fit)
                                        #effects(sem.fit)
                                        #hist(residuals(sem.fit))
                                        #stdCoef(sem.fit)
   pathDiagram(sem.fit,file='semPathCanros',edge.labels='values',standardize=TRUE
               ,ignore.double=FALSE,size=c(12,12),edge.font=c("Arial", 10),
               graphics.fmt='png') #export to graphviz

@ 


\includegraphics{semPathCanros.png}
\pagebreak

<<echo=false>>=
###Calare
Calare <- com$Calare
model.sem <- specifyModel(file='~/scrl/scrl_semCalare.txt')
   sem.data <- cbind(env,Calare)
                                        #transforms
   sem.data$Light.average <- sqrt(sem.data$Light.average)
   sem.data$Litter <- sqrt(sem.data$Litter)
   sem.data$Big.rocks <- sqrt(sem.data$Big.rocks)
                                        #sem fitting and analysis
                                        #colnames(sem.data)
   Sigma <- var(sem.data[,c(-1,-3,-6:-9)])
   sem.fit <- sem(model.sem,S=Sigma,N=nrow(sem.data))
   summary(sem.fit)
   modIndices(sem.fit)
                                        #effects(sem.fit)
                                        #hist(residuals(sem.fit))
                                        #stdCoef(sem.fit)
   pathDiagram(sem.fit,file='semPathCalare',edge.labels='values',standardize=TRUE
               ,ignore.double=FALSE,size=c(12,12),edge.font=c("Arial", 10),
               graphics.fmt='png') #export to graphviz

@ 


\includegraphics{semPathCalare.png}
\pagebreak

<<echo=false>>=

###Phydub
Phydub <- com$Phydub
model.sem <- specifyModel(file='~/scrl/scrl_semPhydub.txt')
   sem.data <- cbind(env,Phydub)
                                        #transforms
   sem.data$Light.average <- sqrt(sem.data$Light.average)
   sem.data$Litter <- sqrt(sem.data$Litter)
   sem.data$Big.rocks <- sqrt(sem.data$Big.rocks)
                                        #sem fitting and analysis
                                        #colnames(sem.data)
   Sigma <- var(sem.data[,c(-1,-3,-6:-9)])
   sem.fit <- sem(model.sem,S=Sigma,N=nrow(sem.data))
   summary(sem.fit)
   modIndices(sem.fit)
                                        #effects(sem.fit)
                                        #hist(residuals(sem.fit))
                                        #stdCoef(sem.fit)
   pathDiagram(sem.fit,file='semPathPhydub',edge.labels='values',standardize=TRUE
               ,ignore.double=FALSE,size=c(12,12),edge.font=c("Arial", 10),
               graphics.fmt='png') #export to graphviz
                                        
@ 

\includegraphics{semPathPhydub.png}
\pagebreak

<<>>=
                                        #co-occurrence null models
library(bipartite)
source('~/cor_nets/CorNets.R')
library(audio)
                                        #all
x <- com
if (any(ls()=='null')){}else{null <- nullSim(x,10000)}
length(null)
if (any(ls()=='null.all')){}else{sim <- lapply(null,C.score);null.all <- unlist(sim)}
p.all <- min(c(length(sim[sim>=C.score(x)])/length(sim),length(sim[sim<=C.score(x)])/length(sim)))
ses.all <- (C.score(x) - mean(sim)) / sd(sim)
                                        #moth susceptible
x <- com[env$Moth==0,]
if (any(ls()=='null')){}else{null <- nullSim(x,10000)}
length(null)
if (any(ls()=='null.0')){}else{sim <- lapply(null,C.score);null.0 <- unlist(sim)}
p.0 <- min(c(length(sim[sim>=C.score(x)])/length(sim),length(sim[sim<=C.score(x)])/length(sim)))
ses.0 <- (C.score(x) - mean(sim)) / sd(sim)

                                        #moth resistant
x <- com[env$Moth==1,]
if (any(ls()=='null')){}else{null <- nullSim(x,10000)}
length(null)
if (any(ls()=='null.1')){}else{sim <- lapply(null,C.score);null.1 <- unlist(sim)}
p.1 <- min(c(length(sim[sim>=C.score(x)])/length(sim),length(sim[sim<=C.score(x)])/length(sim)))
ses.1 <- (C.score(x) - mean(sim)) / sd(sim)
                                        #compare co-occurrence patterns
cooc <- cbind(c(p.0,ses.0),c(p.1,ses.1),c(p.all,ses.all))
colnames(cooc) <- c('S','R','ALL')
rownames(cooc) <- c('p.min','SES')
cooc

@ 

<<results=tex>>=
library(xtable)
xtable(cooc)

@ 

<<fig=true>>=
                                        #co-occurrence network
source('~/cor_nets/araujo_method/araujo_method.R')
library(sna)
x.net <- cbind(env$Moth,com)
names(x.net)[1] <- 'moth'
if (any(ls()=='net')){}else{net <- araujoNet(x.net)$dp}
if (any(ls()=='net.0')){}else{net.0 <- araujoNet(x.net[env$Moth==0,])$dp}
if (any(ls()=='net.1')){}else{net.1 <- araujoNet(x.net[env$Moth==1,])$dp}
par(mfrow=c(2,3))
gplot(net,gmode='graph',displaylabels=TRUE,label.cex=0.65)
gplot(net.0,gmode='graph',displaylabels=TRUE,label.cex=0.65)
gplot(net.1,gmode='graph',displaylabels=TRUE,label.cex=0.65)
hist(null.all)
abline(v=C.score(com))
hist(null.0)
abline(v=C.score(com[env$Moth==0,]))
hist(null.1)
abline(v=C.score(com[env$Moth==1,]))

@ 

<<fig=true>>=
e.col <- net
e.col[net!=0] <- 'grey'
v.cex <- apply(x.net,2,function(x) length(x[x!=0]))
v.cex <- (v.cex / max(v.cex) + 1)^2
gplot(net,gmode='graph',displaylabels=TRUE,label.cex=0.65,
      edge.col=e.col,edge.lwd=(net+1)^10,vertex.cex=v.cex,
      vertex.sides=50,vertex.col='black',vertex.border='white')

@ 

%% %%Activate for bibtex vibliography
\bibliographystyle{plain}
\bibliography{/Users/Aeolus/Documents/bibtex/biblib}


\end{document}  


