#Lichen Co-occurrence study
#Sampled the presence of all species of known ONC lichen in the N45-55 lichen quadrats.

##Package dependencies
library(ecodist)
library(vegan)
library(gdata)
library(gplots)
library(sna)
library(lme4)
library(RLRsim)
library(fossil)
source('/Users/Aeolus/Documents/Active_Projects/CorNets/CorNets.R')

##New functions
##Graph size (i.e. number of nodes)
netSize <- function(x){
  n <- apply(x,2,function(x) sum(abs(x)))
  n <- length(n[n!=0])
  return(n)
}

##Coerce tree notation
as.mytree <- function(x){

x <- as.character(x) #change from factor to character
x <- gsub('-','.',x) #change - to .

                                        #remove leading zeros in the tree number
for (i in (1:length(x))){
  y <- unlist(strsplit(x[i],split='\\.'))
  z <- unlist(strsplit(y[2],split=''))
  if (z[1] == '0'){
    x[i] <- paste(y[1],z[2],sep='.')
  }
}

return(x)
}

##Load data
LCO <- read.csv('/Users/Aeolus/Documents/Active_Projects/ONC_Lichen/ONC_LCO_data/ONCLichenCooc_12May2011.csv')

##Remove RL6? and T6
#LCO <- LCO[LCO$Geno != 'RL6',]
LCO <- LCO[LCO$Geno != 'T6',]

##Model networks for each quadrat
attach(LCO)
names(LCO)
tree.info <- paste(Tree,Geno,Quadrat,Year,sep='_') #integrate tree information
detach(LCO)

##Separate species observations
lco.com <- LCO[,7:15]


##model networks
lco.nets <- list() #initiate tree network object

for (i in (1:length(unique(tree.info)))){
 x <- kendall.pairs(lco.com[tree.info == unique(tree.info)[i],],p.adj=FALSE)
 x[is.na(x)] <- 0#make NA values zero
 lco.nets[[i]] <- x
}

names(lco.nets) <- unique(tree.info) #name networks

##Separate network factor information (tree, genotype, quadrat, year of sampling)
net.info <- unique(tree.info)
info.info <- rep(paste('tree','geno','quad','year',sep='_'),length(net.info))
tree.factor <- unlist(strsplit(net.info,split='_')) #tree-level information for each network
info.factor <- unlist(strsplit(info.info,split='_')) #sep information for tree information

net.tree <- tree.factor[info.factor == 'tree'] #tree number information for each network
net.geno <- tree.factor[info.factor == 'geno'] #genotype information for each network
net.quad <- tree.factor[info.factor == 'quad'] #quadrat information for each network
net.year <- tree.factor[info.factor == 'year'] #year of sampling for each network

##Import roughness data
rough <- read.csv('data/ONC_raw_roughness.csv')
rough[is.na(rough)] <- 0 #replace NA values with zeros
rough[rough == ' '] <- 0 #replace empty spots with zeros
rough <- rough[rough[,1] != '',] #remove empty/place holder rows
names(rough)[1] <- 'Tree' #re-name the Tree column
names(rough)[2] <- 'Geno' #re-name the Genotype column
names(rough)[3] <- 'Quadrat' #re-name Quadrat column
                                        #coerce the Tree names
rough$Tree <- as.character(rough$Tree)
rough$Tree <- as.mytree(rough$Tree)
                                        #re-name quadrat locations
rough$Quadrat <- as.character(rough$Quadrat)
rough$Quadrat[rough$Quadrat == 'North 45-55'] <- 'n45.55' #north 45 - 55
rough$Quadrat[rough$Quadrat == 'North 80-90'] <- 'n80.90' #north 80 - 90
rough$Quadrat[rough$Quadrat == 'South 45-55'] <- 's45.55' #south 45 - 55
rough$Quadrat[rough$Quadrat == 'South 80-90'] <- 's80.90' #south 80 - 90

                                        #for each quadrat on each tree, separate the roughness information
names(rough)
attach(rough)
net.rough <- numeric()
rough.TQ <- paste(Tree,Quadrat) #create a vector for coalescing the roughness data
net.TQ <- paste(net.tree,net.quad)

for (i in (1:length(net.TQ))){
  net.rough[i] <- Roughness[rough.TQ == net.TQ[i]]
}

detach(rough)

##Import tree position data
gps <- read.csv('data/NONC_gps_data.csv')[,1:3]
gps$Location <- as.mytree(as.character(gps$Location))
                                        #add missing trees
                                        #check with Jamie to make sure these data are correct
gps <- rbind(gps,c('N1.5', -111.9995,  41.24699))
gps <- rbind(gps,c('N1.7', -111.9995, 41.24709))
gps <- rbind(gps,c('N2.31', -111.9995823, 41.248322))
gps <- rbind(gps,c('N1.24', -111.999534, 41.247919))

                                        #initiate the lat and log vectors for the network locations
net.lat <- numeric() #lat
net.lon <- numeric() #lon

for (i in (1:length(net.tree))){
  net.lat[i] <- gps$Latitude[gps$Location == net.tree[i]]
  net.lon[i] <- gps$Longitude[gps$Location == net.tree[i]]
}

                                        #coerce into numeric
net.lat <- as.numeric(net.lat)
net.lon <- as.numeric(net.lon)

##Calculate species richness
net.rich <- numeric()
for (i in (1:length(unique(tree.info)))){
  x <- lco.com[tree.info == unique(tree.info)[i],]
  net.rich[i] <- sum(apply(x,2,function(x) if (any(x) > 0){1}else{0}))
}


##PerMANOVA for networks
net.dist <- as.dist(netDist(lco.nets)) #calculate the network distances


                                        #Is space an important co-variate?
                                        #Probably NOT.
geo.dist <- earth.dist(cbind(net.lon,net.lat))
mantel(geo.dist~net.dist)

                                        #Is quadrat location important?
                                        #YES, longitude is a factor (i.e. east to west positioning)
adonis(net.dist~net.quad)
adonis(net.dist~net.quad*net.lat*net.lon)

                                        #Is roughness correlated to quadrat position?
                                        #Apparently YES. Upper quadrats are smoother.
par(mfrow=c(1,2))
plot(factor(net.quad),net.rough,ylab='Roughness')
plot(density(net.rough[net.quad == unique(net.quad)[2]]),main='',xlab='')
lines(density(net.rough[net.quad == unique(net.quad)[1]]))
summary(aov(net.rough~net.quad))

                                        #Does genotype predict roughness?
                                        #Yes.
plot(net.rough~factor(net.geno),las=2)
summary(aov(net.rough~net.geno))

                                        #Does roughness alone predict network distance?
                                        #NO.
adonis(net.dist~net.rough)

                                        #Does genotype predict network distance?
                                        #Almost (Not when we removed RL6)
adonis(net.dist~net.geno)

                                        #Does quadrat combined with genotype predict network distance?
                                        #YES. (Not when RL6 is removed)
plot(princomp(net.dist)$scores[,1:2],col=rainbow(max(as.numeric(factor(net.geno))))[as.numeric(factor(net.geno))],pch=as.numeric(factor(net.quad)))
adonis(net.dist~net.geno*net.quad,permutations=999)
adonis(net.dist~net.quad*net.geno,permutations=999)

                                        #What about building lat and/or long into the model?
                                        #NO.
adonis(net.dist~net.geno)
adonis(net.dist~net.geno*net.lon)
adonis(net.dist~net.lon*net.geno)

                                        #What about analyzing the quadrats separately?
                                        #YES, when we remove T6.
net.dist45 <- netDist(lco.nets[net.quad == 'n45.55'])
net.geno45 <- net.geno[net.quad == 'n45.55']
net.rough45 <- net.rough[net.quad == 'n45.55']
net.lon45 <- net.lon[net.quad == 'n45.55']
net.lat45 <- net.lat[net.quad == 'n45.55']
adonis(net.dist45~net.geno45)
adonis(net.dist45~net.geno45*net.rough45)
adonis(net.dist45~net.geno45*net.lon45,permutations=9999)

net.dist80 <- netDist(lco.nets[net.quad == 'n80.90'])
net.geno80 <- net.geno[net.quad == 'n80.90']
net.rough80 <- net.rough[net.quad == 'n80.90']
net.lon80 <- net.lon[net.quad == 'n80.90']
adonis(net.dist80~net.geno80)
adonis(net.dist80~net.geno80*net.rough80)
adonis(net.dist80~net.geno80*net.lon80)


##Analyze structural statistics

##Only using the lower quadrats
lco.nets45 <- lco.nets[net.quad == 'n45.55']




##Degree
net.L45 <- unlist(lapply(lco.nets45,function(x) length(x[x!=0])/2)) #undirected, so only count one link per pair
plot(net.L45~factor(net.geno45))
summary(aov(net.L45~net.geno45*net.lon45))

##Size (i.e. number of nodes)
net.S45 <- unlist(lapply(lco.nets45,netSize))
plot(net.S45~factor(net.geno45))
plot(net.L45~net.S45)
summary(aov(net.S45~net.geno45*net.lon45))

##Centralization
net.C45 <- unlist(lapply(lco.nets45,function(x) centralization(x,degree,mode='undirected')))
hist(net.C45)
hist(sqrt(asin(net.C45)))
plot(net.C45~factor(net.geno45))
summary(aov(sqrt(asin(net.C45))~net.geno45*net.lon45))


##Correlations with richness
net.rich45 <- net.rich[net.quad == 'n45.55']
summary(aov(net.rich45~net.geno45*net.rough45))
summary(aov(net.rich45~net.geno45*net.rough45))
summary(aov(net.rich45~net.lat45))
pairs(cbind(net.rich45,net.S45,net.L45,net.C45),pch=19)

adonis(net.dist45~net.rich45)
adonis(net.dist45~net.rich45*net.S45*net.L45)

##Effect of roughness
summary(lm(net.S45~net.rough45))
summary(lm(net.L45~net.rough45))
summary(lm(net.C45~net.rough45))
summary(lm(net.rich45~net.rough45))

##Ordination of network statistics
pc.45 <- princomp(net.dist45)
env.45 <- cbind(net.S45,net.L45,net.rich45,net.C45,net.rough45,net.lon45)
ord.45 <- pc.45$scores[,1:2]
colnames(env.45) <- c('Size','Degree','Richness','Centralization','Roughness','Longitude')
vfit45 <- envfit(ord.45,env.45)

ord.mu45 <- cbind(tapply(ord.45[,1],net.geno45,mean),tapply(ord.45[,2],net.geno45,mean))
ord.se45 <- cbind(tapply(ord.45[,1],net.geno45,function(x) sd(x)/sqrt(length(x))),tapply(ord.45[,2],net.geno45,function(x) sd(x)/sqrt(length(x))))
ord.sd45 <- cbind(tapply(ord.45[,1],net.geno45,sd),tapply(ord.45[,2],net.geno45,sd))
ord.ciu45 <- ord.mu45 + ord.se45
ord.cil45 <- ord.mu45 - ord.se45

plot(ord.mu45,col=rainbow(max(as.numeric(factor(rownames(ord.mu45)))))[as.numeric(factor(rownames(ord.mu45)))],cex=2,xlim=c(min(ord.cil45[,1]),max(ord.ciu45)),ylim=c(min(ord.cil45[,2]),max(ord.ciu45[,2])),pch=as.numeric(factor(rownames(ord.mu45))),xlab='PC1',ylab='PC2')

for (i in 1:nrow(ord.mu45)){
  lines(c(ord.mu45[i,1],ord.mu45[i,1]),c(ord.cil45[i,2],ord.ciu45[i,2]),col='grey')
  lines(c(ord.cil45[i,1],ord.ciu45[i,1]),c(ord.mu45[i,2],ord.mu45[i,2]),col='grey')
}

plot(vfit45,col='black')

plot(pc.45,las=2)
plot(pc.45$scores[,1:2],col=rainbow(max(as.numeric(factor(net.geno45))))[as.numeric(factor(net.geno45))],pch=19,cex=2)


###Analysis Summary###
                                        #Genotype predicts the similarity of interaction networks when longitude (east-west) location of the tree in the garden is taken into account as a covariate.
adonis(net.dist45~net.geno45*net.lon45,permutations=9999)

                                        #Genotype also predicts structural differences between networks in terms of their size, degree (continuing to use longitude as a covariate).

summary(aov(net.S45~net.geno45*net.lon45))
summary(aov(net.L45~net.geno45*net.lon45))
summary(aov(sqrt(asin(net.C45))~net.geno45*net.lon45))

                                        #Species richness is correlated with all structural statistics
pairs(cbind(net.rich45,net.S45,net.L45,net.C45),pch=19)
cor(cbind(net.rich45,net.S45,net.L45,net.C45))

                                        #Thus, species richness is also a predictor of network similarity, explaining additional variation after genotype and in addition to the other structural statistics
adonis(net.dist45~net.geno45*net.rich45*net.S45*net.L45)

                                        #However, genotype is a poor predictor of species richness (residuals were checked for normality)
summary(aov(net.rich45~net.geno45*net.lon45))

                                        #The main drivers of structural variation were centrality, size and degree of networks and species richness. Roughness was a very poor predictor of network structure.
vfit45

##Graph plots
genomu.nets45 <- tapply(lco.nets45,net.geno45,edge.mean)
length(genomu.nets45)
par(mfrow=c(5,3),mai=c(0.3,0.3,0.3,0.3))
for (i in 1:length(genomu.nets45)){
  v.cex <- v.col<- apply(lco.com[LCO$Quadrat == 'n45.55' & LCO$Geno == names(genomu.nets45)[i],],2,sum)
  v.col[v.col > 0] <- 'black'
  v.col[v.col == 0] <- 'white'
  v.cex <- log(v.cex+1)
  v.cex <- v.cex + 1
  gplot((genomu.nets45[i]),mode='circle',gmode='graph',vertex.sides=50,vertex.col=v.col,displaylabels=TRUE,vertex.border='black',vertex.cex=v.cex,label.cex=0.85)
  title(main=names(genomu.nets45)[i],cex=2)
}


par(mfrow=c(1,3))
plot(tapply(net.S45,net.geno45,mean)~as.numeric(table(net.geno45)))
summary(lm(tapply(net.S45,net.geno45,mean)~as.numeric(table(net.geno45))))$r.squared
abline(lm(tapply(net.S45,net.geno45,mean)~as.numeric(table(net.geno45))))
plot(tapply(net.L45,net.geno45,mean)~as.numeric(table(net.geno45)))
summary(lm(tapply(net.L45,net.geno45,mean)~as.numeric(table(net.geno45))))$r.squared
abline(lm(tapply(net.L45,net.geno45,mean)~as.numeric(table(net.geno45))))
plot(tapply(net.C45,net.geno45,mean)~as.numeric(table(net.geno45)))
summary(lm(tapply(net.C45,net.geno45,mean)~as.numeric(table(net.geno45))))$r.squared
abline(lm(tapply(net.C45,net.geno45,mean)~as.numeric(table(net.geno45))))

###CONCLUSION###
###TAKE-HOME: Foundation species genetics influences the structure of interactions among bark lichen species beyond an assembly affect of the number of species. 
##Lichen community network structure varies significantly in response to tree genotype. This pattern does not seem to be related to the bark roughness, as richness and community composition seem to be. This is particularly intriguing since roughness seems to be an important factor in lichen establishment. It is possible that there is a threshold effect of roughness that we are not detecting. The main structural drivers of network variation were the size (i.e. the number of nodes), centralization and degree (i.e. the number of connections). Thus, beyond the affect of community assembly, which would have the signature of species richness being the primary driver of network structure, community networks of bark lichen species associated with narrowleaf cottonwood are structure by the genetics of the individual tree that they occur on. This suggests that the structure of complex (i.e. multi-species) interaction networks in ecosystems have a genetic basis. These results are particularly striking given that lichen species are very slow growing and that our communities are all likely to be in the early stages of establishment.
adonis(net.dist45~net.geno45*net.lon45)
