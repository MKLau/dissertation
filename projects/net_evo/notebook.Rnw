\documentclass[12pt]{article}
\usepackage{color}
\usepackage{cite}
\usepackage{geometry}                % See geometry.pdf to learn the layout options. There are lots.
%\usepackage{pdflscape}        %single page landscape
                                %mode \begin{landscape} \end{landscape}
\geometry{letterpaper}                   % ... or a4paper or a5paper or ... 
%\usepackage[parfill]{parskip}    % Activate to begin paragraphs with an empty line rather than an indent
\usepackage{graphicx}
\usepackage{amssymb}
\usepackage{/Library/Frameworks/R.framework/Resources/share/texmf/Sweave}
\newcommand{\etal}{\textit{et al.}}
\usepackage{hyperref}  %\hyperref[label_name]{''link text''}
                       %\hyperlink{label}{anchor caption}
                       %\hypertarget{label}{link caption}
\linespread{1.5}

\title{Evolution on Ecological Networks}
\author{M.K. Lau}
%\date{}                                           % Activate to display a given date or no date

\begin{document}
\maketitle

\thispagestyle{empty}

\setcounter{tocdepth}{3}  %%activate to number sections
\tableofcontents

\section{Outline}
\begin{itemize}
\item Main Question: how does the structure of ecological networks
  influence the evolution of species in the community?
\item Simulate the evolution of traits determining interactions (and
  possibly linked traits of varying association)
\item Review:
  \begin{itemize}
  \item Salas manuscript
    \subitem -- Different from Sala's in that it will explore more
    network structure, including modularity
  \item Lonsdorf Manuscript
    \subitem -- Different from Lonsdorf's in that the emphasis is
    exploring how network structure influences evolution
  \item Shuster et al. (2006)
  \item Nuismer and Doebeli (2004)
  \item Nowak 2006 Chapter 8 (population genetics on graphs)
  \end{itemize}
\item Model:
  \begin{itemize}
  \item Individual Based
  \item Genetics -> binary vector
  \item Phenotype -> vector of continuous trait values (\sim N($\mu$,$\sigma$))
  \item Interaction Network -> adjacency matrix + trait matching
  \item Community Dynamics -> demographics (birth - death) and stability
  \item Ecosystem Dynamics -> productivity and energy flow
  \item Evolution -> selection (fitness + reproduction) and
    recombination + mutation
  \end{itemize}
\item Pseudocode:
  \begin{enumerate}
  \item Generate interaction network
    \subitem -- adjacency matrix
    \subitem -- make sure to control for covarying structural
    properties, such as connectence
  \item Generate genome (i.e. create a binary vector)
  \item Map genotype to phenotype (i.e. for each allele draw a value
    (0 <= value < infinity) from a normal distribution)
    \subitem -- Repeat for n individuals in k species
  \item 
  \end{enumerate}
\item Explore:
  \begin{itemize}
  \item Stability - resistance and resilience 
  \item Additive versus non-additive (epistatic) genetic effects
  \item Random, foundation, nested/modular
  \item \textit{Spatial (e.g. relative abundance effects)}
  \item Others...?
  \end{itemize}
\end{itemize}

\section{Check out simecol}
\url{http://cran.r-project.org/web/packages/simecol/vignettes/a-simecol-introduction.pdf}

<<>>=
library(simecol)
?simecol
?indbasedModel

@ 

\section{The Model}

\subsection{Generate Interaction Network}

<<>>=
                                        #generate a square, symmetric adjacency matrix 
rnet <- function(n){
x <- array(sample(c(0,1),(n^2),replace=TRUE),dim=c(n,n))
x[lower.tri(x)] <- t(x)[lower.tri(x)]
return(x)
}
                                        #

@ 

\subsection{Generate Genome}
<<>>=
                                        #generate a genome (binary) of length n
rgenome <- function(n){
  return(sample(c(0,1),n,replace=TRUE))
}
                                        #generate a population of genomes of length n
genomePop <- function(n){
g <- sapply(rep(n,10),function(x) rgenome(x))
g <- split(g, rep(1:ncol(g), each = nrow(g)))
return(g)
}
                                        #generate a community of genomes
                                        #generate a community
                                        #nk is a list of population sizes nk <- split(nk, rep(1:nrow(nk), each = ncol(nk)))
genomeCom <- function(nk){
  return(lapply(nk,function(x) genomePop(x)))
}


@ 

\subsection{Map Genotype to Phenotype}

<<>>=
                                        #map a genotype to a phenotype
gpMap <- function(g,mu,sigma){
  x <- cbind(g,mu,sigma)
  y <- apply(x,1,function(x) if (x[1] == 0){0}else{rnorm(1,x[2],x[3])})
  return(y)
}

@ 

\subsection{Generate a population for each species}

<<>>=
                                        #generate a population
                                        #g is a list of genotypes
                                        #mu is a vector of population trait means
                                        #sigma is a vector of population trait standard deviations
genPop <- function(g,mu,sigma){
  return(lapply(g,function(x,m,s) gpMap(x,m,s),m=mu,s=sigma))
}


@ 

\section{Test Run}

<<>>=
                                        #generate a population of genotypes for each species
                                        #
nk <- as.matrix(rep(15,25)) #create a kX1 matrix of genome lengths
nk <- split(nk, rep(1:nrow(nk), each = ncol(nk))) #create a genome length list for all k species
meta.genome <- genomeCom(rep(15,15)) #create a population of genomes for each species

                                        #1. initialize a population of genotypes
                                        #2. map genotypes to phenotypes using trait means
                                        #3. calculate trait matching using adjacency matrix
                                        #4. calculate fitness using trait matching
                                        #5. select a proportion for reproduction using fitness
                                        #6. recombine and mutate
                                        #7. select a proportion for death
gn <- 15 #genome length

mu <- runif(n,0,100)
sigma <- rnorm(n,15,3)
gpMap(rgenome(15),mu,sigma)


@ 

%% %%Figure construction
%% <<echo=false,results=hide,label=fig1,include=false>>=
%% @ 


%% %%Figure plotting
%% \begin{figure} 
%% \begin{center} 
%% <<label=fig1,fig=TRUE,echo=false>>=
%% <<fig1>> 
%% @ 
%% \end{center} 
%% \caption{}
%% \label{fig:one}
%% \end{figure}


%% %%Activate for bibtex vibliography
%% \cite{goossens93}
%% \bibliographystyle{plain}
%% \bibliography{/Users/Aeolus/Documents/bibtex/biblib}


\end{document}  


